# Source global definitions
if [ -f /etc/bashrc ]; then
	. /etc/bashrc
fi

alias ls='ls -G'
alias rm='rm -i'
alias lc="wc -l"
alias ll="ls -l"
alias rf="readlink -f"
alias parallel="parallel --gnu"

PS1='\u@\h:\w\$ '

HOME=/Users/wandingzhou

export PATH=~/bin:$PATH
export SCREENRC=$HOME/wzlib/screenrc/screenrc_hp
export PYTHONPATH=$HOME/wzlib/pyutils
export AWKPATH=$HOME/wzlib/awk

# % cpan
# cpan> o conf makepl_arg INSTALL_BASE=/mydir/perl
# cpan> o conf commit
# export PERL5LIB=/home/wzhou1/tools/perltools/lib/perl5:/home/wzhou1/tools/vcftools/vcftools_0.1.11/lib/perl5/site_perl:${PERL5LIB}

alias scp='rsync -Pravdtze ssh'
alias awk='awk -v OFS="\t"'
alias les="less -S"
alias qsuball="find $HOME/htcpbs/ -type f | sort | xargs -I {} qsub {}"
alias qdelall="qstat | grep wzhou | awk '{print $1}' | xargs -I {} qdel {}"

function prompt {
  local BLACK="\[\033[0;30m\]"
  local BLACKBOLD="\[\033[1;30m\]"
  local GREY="\[\033[00m\]"
  local RED="\[\033[0;31m\]"
  local REDBOLD="\[\033[1;31m\]"
  local GREEN="\[\033[0;32m\]"
  local GREENBOLD="\[\033[1;32m\]"
  local YELLOW="\[\033[0;33m\]"
  local YELLOWBOLD="\[\033[1;33m\]"
  local BLUE="\[\033[0;34m\]"
  local BLUEBOLD="\[\033[1;34m\]"
  local PURPLE="\[\033[0;35m\]"
  local PURPLEBOLD="\[\033[1;35m\]"
  local CYAN="\[\033[0;36m\]"
  local CYANBOLD="\[\033[1;36m\]"
  local WHITE="\[\033[0;37m\]"
  local WHITEBOLD="\[\033[1;37m\]"
  # export PS1="$REDBOLD[\t]${SCREENTITLE}$GREY[$GREENBOLD\u@\h $YELLOWBOLD\w$GREY]"'$ '
  export PS1="$REDBOLD[\t]${SCREENTITLE}$GREY[$GREENBOLD\u@\h $YELLOWBOLD\w$GREY]\$ "

}

prompt

# PROMPT_COMMAND='echo -ne "\033k\033\134\033k${HOSTNAME}[`basename ${PWD}`]\033\134"'
# PROMPT_COMMAND='echo -ne "\033k\033\134\033k[`basename ${PWD}`]\033\134"'
# `basename ${PWD}`]\033\0134"'

# case "$TERM" in
#     screen*) PROMPT_COMMAND='echo -ne "\033k\033\0134"'
# esac

function wz_vcffilter {
    vcffile=$1;
    if [[ $3 == "-s" ]]; then
	awk -v threshold=$2 '
(!/^#/){
if($6>threshold) print;
}' $vcffile | sort -k6,6 -nr
    else
	awk -v threshold=$2 '
(!/^#/){
if($6>threshold) print;
}' $vcffile
    fi
}

function wzsum {
  awk -v column=$2 '(NR==1){min=$column;max=$column}{sum += $column; if(min>$column) min=$c\
olumn; if(max < $column) max=$column; }END{print "sum: "sum"\tcount: "NR"\tmean: "sum/NR"\t\
min: "min"\tmax: "max}' $1
}

function wzsum_slow {
  column=$2
  sort -n $1 -k$column,$column | awk -v column=$column 'BEGIN{c=0;sum=0;} {a[c++]=$column; \
sum+=$column;} END{ave=sum/c; if((c%2)==1){median=a[int(c/2)];} else{median=(a[c/2]+a[c/2-1\
])/2;} print "sum: "sum"\tcount: "c"\tmean: "ave"\tmedian: "median"\tmin: "a[0]"\tmax: "a[c\
-1]"\t25%: "a[c/4]"\t75%: "a[c/4*3]}'
}

alias qsubi='qsub -I -q medium -l nodes=1:ppn=1'

function dnarev {
  echo $1 | tr ATGC TACG | rev;
}

# eval $(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib)
function getseq {
    samtools faidx /workspace/zchong/clinsek/test_data/hg19.fa $1
}

function tv {
    samtools tview $1 /workspace/zchong/clinsek/test_data/hg19.fa
}
function sv {
    samtools view $1 $2 | les
}

function bt {
    bcftools view $1 | les
}

MANPATH=$MANPATH:$HOME/share/man

function wzqsub {
    find ~/pbs/ -type f | sort | sed -n "${1},${2}"p | xargs -I {} qsub {}
}

### git ###

alias gs="git status"
alias gu="git pull"
alias gp="git pull"
alias gh="git push"
alias gc="git commit -a"
alias ga="git add"

# lazy git
function gl {

  if [ -z "$1" ]; then message="minor, message omitted"; else message="$1"; fi;
  git commit -a -m "$message";
  git push;
}
