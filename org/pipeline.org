#+STARTUP: indent
#+STARTUP: content
** bam merge with read groups

#+BEGIN_SRC sh
  cmd="
if [[ ! -s $base/bam/$dest.rg.txt ]]; then
  :>$base/bam/$dest.rg.txt
  for x in $@; do
    samtools view -H $x | grep '^@RG' >>$base/bam/$dest.rg.txt
  done
fi

if [[ -s $base/bam/$dest.rg.txt ]]; then
  samtools merge -h $base/bam/$dest.rg.txt $base/bam/$dest.bam $@
  rm -f $base/bam/$dest.rg.txt;
else
  samtools merge $base/bam/$dest.bam $@
fi
samtools index $base/bam/$dest.bam
"
  jobname="merge_bam_$dest"
  pbsfn=pbs/$jobname.pbs
  pbsgen one "$cmd" -name $jobname -dest $pbsfn -hour 1 -memG 10 -ppn 1
  [[ $1 == "do" ]] && qsub $pbsfn
#+END_SRC

* preprocess 450k
** with minfi
setwd("<your directory where data is>")
raw.dat <- read.450k.exp(base = slide.folder, targets = files.table)  ### Import data
norm.dat <- preprocessIllumina(raw.dat, bg.correct = TRUE, normalize = "controls") #### This would do the background correction, color bias removal, adjustment, and normalization
dat.table <- getBeta(norm.dat)   ######## get the Beta values for analysis
* MDA map2.sh pipeline
Note 
bwa merge -r infers read group from file name
#+BEGIN_SRC sh
cd /projects/flowcell61_A_paired_BCX
echo align the reads at `date`
echo `pwd`
echo `date` map Cap474-101069-23_GAGTGG_L004_R1_001.fastq.gz..
/projects/tools/bwa-0.6.2/bwa  aln -t 1 /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R1_001.fastq.gz>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R1_001.fastq.gz.sai
echo `date` map Cap474-101069-23_GAGTGG_L004_R1_001.fastq.gz done .

echo `date` map Cap474-101069-23_GAGTGG_L004_R1_002.fastq.gz..
/projects/tools/bwa-0.6.2/bwa  aln -t 1 /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R1_002.fastq.gz>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R1_002.fastq.gz.sai
echo `date` map Cap474-101069-23_GAGTGG_L004_R1_002.fastq.gz done .

echo `date` map Cap474-101069-23_GAGTGG_L004_R1_003.fastq.gz..
/projects/tools/bwa-0.6.2/bwa  aln -t 1 /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R1_003.fastq.gz>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R1_003.fastq.gz.sai
echo `date` map Cap474-101069-23_GAGTGG_L004_R1_003.fastq.gz done .

echo `date` map Cap474-101069-23_GAGTGG_L004_R1_004.fastq.gz..
/projects/tools/bwa-0.6.2/bwa  aln -t 1 /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R1_004.fastq.gz>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R1_004.fastq.gz.sai
echo `date` map Cap474-101069-23_GAGTGG_L004_R1_004.fastq.gz done .

echo `date` map Cap474-101069-23_GAGTGG_L004_R2_001.fastq.gz..
/projects/tools/bwa-0.6.2/bwa  aln -t 1 /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R2_001.fastq.gz>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R2_001.fastq.gz.sai
echo `date` map Cap474-101069-23_GAGTGG_L004_R2_001.fastq.gz done .

echo `date` map Cap474-101069-23_GAGTGG_L004_R2_002.fastq.gz..
/projects/tools/bwa-0.6.2/bwa  aln -t 1 /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R2_002.fastq.gz>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R2_002.fastq.gz.sai
echo `date` map Cap474-101069-23_GAGTGG_L004_R2_002.fastq.gz done .

echo `date` map Cap474-101069-23_GAGTGG_L004_R2_003.fastq.gz..
/projects/tools/bwa-0.6.2/bwa  aln -t 1 /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R2_003.fastq.gz>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R2_003.fastq.gz.sai
echo `date` map Cap474-101069-23_GAGTGG_L004_R2_003.fastq.gz done .

echo `date` map Cap474-101069-23_GAGTGG_L004_R2_004.fastq.gz..
/projects/tools/bwa-0.6.2/bwa  aln -t 1 /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R2_004.fastq.gz>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R2_004.fastq.gz.sai
echo `date` map Cap474-101069-23_GAGTGG_L004_R2_004.fastq.gz done .

echo `date` sampe ..
/projects/tools/bwa-0.6.2/bwa  sampe /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R1_001.fastq.gz.sai data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R2_001.fastq.gz.sai data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R1_001.fastq.gz data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R2_001.fastq.gz| /projects/tools/samtools-0.1.19/samtools view  -b -S -|/projects/tools/samtools-0.1.19/samtools sort - data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01_1

/projects/tools/bwa-0.6.2/bwa  sampe /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R1_002.fastq.gz.sai data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R2_002.fastq.gz.sai data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R1_002.fastq.gz data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R2_002.fastq.gz| /projects/tools/samtools-0.1.19/samtools view  -b -S -|/projects/tools/samtools-0.1.19/samtools sort - data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01_2

/projects/tools/bwa-0.6.2/bwa  sampe /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R1_003.fastq.gz.sai data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R2_003.fastq.gz.sai data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R1_003.fastq.gz data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R2_003.fastq.gz| /projects/tools/samtools-0.1.19/samtools view  -b -S -|/projects/tools/samtools-0.1.19/samtools sort - data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01_3

/projects/tools/bwa-0.6.2/bwa  sampe /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R1_004.fastq.gz.sai data/IPCT-BCX-PT155-101068-A-TU-A01/bam/Cap474-101069-23_GAGTGG_L004_R2_004.fastq.gz.sai data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R1_004.fastq.gz data/IPCT-BCX-PT155-101068-A-TU-A01/gz/Cap474-101069-23_GAGTGG_L004_R2_004.fastq.gz| /projects/tools/samtools-0.1.19/samtools view  -b -S -|/projects/tools/samtools-0.1.19/samtools sort - data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01_4

echo `date` sampe done. 

/projects/tools/samtools-0.1.19/samtools view -H data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01_1.bam>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/header.txt
echo -e "@RG	ID:IPCT-BCX-PT155-101068-A-TU-A01_1	LB:IPCT-BCX-PT155-101068-A-TU-A01	SM:IPCT-BCX-PT155-101068-A-TU-A01">>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/header.txt
echo -e "@RG	ID:IPCT-BCX-PT155-101068-A-TU-A01_2	LB:IPCT-BCX-PT155-101068-A-TU-A01	SM:IPCT-BCX-PT155-101068-A-TU-A01">>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/header.txt
echo -e "@RG	ID:IPCT-BCX-PT155-101068-A-TU-A01_3	LB:IPCT-BCX-PT155-101068-A-TU-A01	SM:IPCT-BCX-PT155-101068-A-TU-A01">>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/header.txt
echo -e "@RG	ID:IPCT-BCX-PT155-101068-A-TU-A01_4	LB:IPCT-BCX-PT155-101068-A-TU-A01	SM:IPCT-BCX-PT155-101068-A-TU-A01">>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/header.txt
echo `date` merge the small bam files..
/projects/tools/samtools-0.1.19/samtools merge -r -h data/IPCT-BCX-PT155-101068-A-TU-A01/bam/header.txt -f data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.sorted.bam data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01_*.bam
echo `date` small bams merged. Sorted.bam obtained.

echo `date` indexing data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.sorted.bam..
/projects/tools/samtools-0.1.19/samtools index data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.sorted.bam
echo `date` index done.

echo `date` run flagstat..
/projects/tools/samtools-0.1.19/samtools flagstat data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.sorted.bam>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.sorted.bam.flagstat
echo `date` flagstat done.
echo `date` MarkDuplicates..
/usr/bin/java -jar /projects/tools/picard-tools-1.80/MarkDuplicates.jar I=data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.sorted.bam O=data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.rmdup.bam M=data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.markdup.metrics AS=true REMOVE_DUPLICATES=true VALIDATION_STRINGENCY=LENIENT
echo `date`  MarkDuplicate Done.
echo remove sorted.bam file..
rm data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.sorted.bam
echo sorted.bam deleted.

echo `date` indexing the rmduped files..
/projects/tools/samtools-0.1.19/samtools index data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.rmdup.bam
echo `date` index done.

echo `date` mpilup the rmduped bam..
/projects/tools/samtools-0.1.19/samtools mpileup -q 20 -C 50 -f /projects/database/reference/hs37d5.fa data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.rmdup.bam | awk '{if($4!=0) print $0}'>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.rmdup.mpileup
echo `date` mpileup done at `date`.

echo `date` running flagstat for rmduped bam..
/projects/tools/samtools-0.1.19/samtools flagstat data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.rmdup.bam>data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01.rmdup.bam.flagstat
echo `date` flagstat done.

rm data/IPCT-BCX-PT155-101068-A-TU-A01/bam/IPCT-BCX-PT155-101068-A-TU-A01_*.bam
echo removing the intermediate bam files..
echo intermediate bam files removed.
echo All Done!
#+END_SRC
* MDA gatk_realign.sh pipeline
#+BEGIN_SRC sh
cd /scratch/bcb/hzhao1/scratch/clinsek_comparison
echo `date` start pre-processing for sample IPCT-CH-5446-Tumor-1290

echo `date` 
~/ipct/jdk1.7.0_51/bin/java -jar /scratch/bcb/hzhao1/tools/picard-tools-1.80/AddOrReplaceReadGroups.jar I=data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.rmdup.bam O=data/IPCT-CH-5446-Tumor-1290/bam/rg_added.IPCT-CH-5446-Tumor-1290.rmdup.bam RGPL=Illumina RGID=IPCT-CH-5446-Tumor-1290 RGSM=IPCT-CH-5446-Tumor-1290 RGLB=IPCT-CH-5446-Tumor-1290 RGPU=IPCT-CH-5446-Tumor-1290 SORT_ORDER=coordinate VALIDATION_STRINGENCY=LENIENT
~/tools/samtools-0.1.19/samtools index data/IPCT-CH-5446-Tumor-1290/bam/rg_added.IPCT-CH-5446-Tumor-1290.rmdup.bam
echo `date` AddOrReplaceReadGroups Done.

echo `date` start realignertargetCreator of IndelRealignments..
java -Xmx15g -jar GenomeAnalysisTK.jar -R /scratch/bcb/hzhao1/ipct/reference/hs37d5.fa -T RealignerTargetCreator -nt 4 -I data/IPCT-CH-5446-Tumor-1290/bam/rg_added.IPCT-CH-5446-Tumor-1290.rmdup.bam -o data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.intervals -known hs37_gatk_ref/1000G_phase1.indels.hs37.vcf -known hs37_gatk_ref/Mills_and_1000G_gold_standard.indels.hs37.vcf
echo `date` RealignerTargetCreator done.

echo `date` IndelRealignments..
java -Xmx15g -jar GenomeAnalysisTK.jar -R /scratch/bcb/hzhao1/ipct/reference/hs37d5.fa  -T IndelRealigner -I data/IPCT-CH-5446-Tumor-1290/bam/rg_added.IPCT-CH-5446-Tumor-1290.rmdup.bam -targetIntervals data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.intervals -o data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.IndelRealigned.bam -known hs37_gatk_ref/1000G_phase1.indels.hs37.vcf -known hs37_gatk_ref/Mills_and_1000G_gold_standard.indels.hs37.vcf
~/tools/samtools-0.1.19/samtools index data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.IndelRealigned.bam
echo `date` IndelRealigner and index Done. 

echo `date` BaseRecalibrator ..
java -Xmx15g -jar GenomeAnalysisTK.jar -R /scratch/bcb/hzhao1/ipct/reference/hs37d5.fa  -T BaseRecalibrator -I data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.IndelRealigned.bam -o data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.recal.table -knownSites hs37_gatk_ref/dbsnp138.hs37.vcf -knownSites hs37_gatk_ref/Mills_and_1000G_gold_standard.indels.hs37.vcf
echo `date` BaseRecalibrator done.

echo `date` Print reads..
java -Xmx15g -jar GenomeAnalysisTK.jar -R /scratch/bcb/hzhao1/ipct/reference/hs37d5.fa  -T PrintReads -I data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.IndelRealigned.bam -BQSR data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.recal.table -o data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.recaled.bam
echo `date` PrintReads done.

echo `date` index and flagstat the recalibrated bam
~/tools/samtools-0.1.19/samtools index data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.recaled.bam
~/tools/samtools-0.1.19/samtools flagstat data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.recaled.bam>data/IPCT-CH-5446-Tumor-1290/bam/IPCT-CH-5446-Tumor-1290.recaled.bam.flagstat
echo `date` Recalibrated BAM has been indexed.
echo Preprocessing of IPCT-CH-5446-Tumor-1290 is ALL DONE.
#+END_SRC
* perl utils usc

** fastqConstantSplit.pl
fastqConstantSplit.pl [#parts] [1.fq] [2.fq]

#+BEGIN_SRC
/home/uec-00/shared/production/software/perl_utils_usc/fastqConstantSplit.pl 1 /export/uec-gs1/laird/users/bberman/research/agilentRrbs/fromAgilent/KJ_SC112012_KJ80_I001_ATCACG_L005_R1.fastq /export/uec-gs1/laird/users/bberman/research/agilentRrbs/fromAgilent/KJ_SC112012_KJ80_I001_ATCACG_L005_R2.fastq
#+END_SRC

** wrap_bsmap.pl

wrap_bsmap.pl [result.bam] [ref.fa] [r1.fq] [r2.fq]

#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/wrap_bsmap.pl KJ_SC112012_KJ80_I001_ATCACG_L005_R1.fastq.NC_001416.fa.bam /home/uec-00/shared/production/genomes/lambdaphage/NC_001416.fa
/export/uec-gs1/laird/users/bberman/research/agilentRrbs/fromAgilent/KJ_SC112012_KJ80_I001_ATCACG_L005_R1.fastq /export/uec-gs1/laird/users/bberman/research/agilentRrbs/fromAgilent/KJ_SC112012_KJ80_I001_ATCACG_L005_R2.fastq
#+END_SRC

** orgcontamcheck.pl - contamination check
orgcontamcheck.pl [.fq] [noreads] [contam1.fa] [contam2.fa] [contam3.fa]...

#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/orgcontamcheck.pl /export/uec-gs1/laird/users/bberman/research/agilentRrbs/fromAgilent/KJ_SC112012_KJ80_I001_ATCACG_L005_R1.fastq 5000000  /home/uec-00/shared/production/genomes/encode_hg19_mf/female.hg19.fa  /home/uec-00/shared/production/genomes/sacCer1/sacCer1.fa  /home/uec-00/shared/production/genomes/phi-X174/phi_plus_SNPs.fa  /home/uec-00/shared/production/genomes/arabidopsis/tair8.pluscontam.fa  /home/uec-00/shared/production/genomes/mm9_unmasked/mm9_unmasked.fa  /home/uec-00/shared/production/genomes/Ecoli/EcoliIHE3034.fa  /home/uec-00/shared/production/genomes/rn4_unmasked/rn4.fa  /home/uec-00/shared/production/genomes/salmon/salmosalar.fa  /home/uec-00/shared/production/genomes/rRNA/rRNA.fa  /home/uec-00/shared/production/genomes/lambdaphage/NC_001416.fa 
#+END_SRC

** merge_bams.pl - Merge bam files

since FASTQ was aligned separately
this adds read groups using the Picard, mark duplicates and flagstat

merge_bams.pl [target.bam] [source1.bam] [source2.bam] ...

#+BEGIN_SRC
 /home/uec-00/shared/production/software/perl_utils_usc/merge_bams.pl ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam /export/uec-gs1/laird/shared/production/ga/flowcells/D295HACXX/results/D295HACXX/D295HACXX_7_NIC1254A76/ResultCount_D295HACXX_7_NIC1254A76.hg19_rCRSchrm.fa.mdups.bam /export/uec-gs1/laird/shared/production/ga/flowcells/C1LBAACXX/results/C1LBAACXX/C1LBAACXX_6_NIC1254A76/ResultCount_C1LBAACXX_6_NIC1254A76.hg19_rCRSchrm.fa.mdups.bam /export/uec-gs1/laird/shared/production/ga/flowcells/C27BLACXX/run2/results/C27BLACXX/C27BLACXX_6_NIC1254A76/ResultCount_C27BLACXX_6_NIC1254A76.hg19_rCRSchrm.fa.mdups.bam
#+END_SRC

or
#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/merge_bams.pl ResultCount_AGILENT_1_SC112012L005.NC_001416.fa.bam KJ_SC112012_KJ80_I001_ATCACG_L005_R1.fastq.NC_001416.fa.bam.rmuln.bam
#+END_SRC

** wrap_java_report.pl - merge QC metrics

wrap_java_report.pl MERGING_qcmetrics.csv bisulfiteQCMetrics.pl [dir]

#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/wrap_java_report.pl MERGING_qcmetrics.csv /home/uec-00/shared/production/software/perl_utils_usc/bisulfiteQCMetrics.pl /export/uec-gs1/laird/shared/production/ga/merges/2014-02-12_1437_merge_NIC1254A76/results/MERGING/MERGING_1_NIC1254A76
#+END_SRC

** wrap_lc_extrap.pl - coverage extrapolation

wrap_lc_extrap.pl [.bam] [.metric.txt] 

#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/wrap_lc_extrap.pl  ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.CoverageProjection.metric.txt
#+END_SRC

** wrap_picard.pl
java -Xmx12g -jar picard.jar TMP_DIR=/export/uec-gs1/laird/shared/tmp
*** GC bias from Picard

wrap_picard.pl CollectBcBiasMerics.jar INPUT=[.bam] OUTPUT=[.CollectGcBiasMetrics.metric.txt]

#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/wrap_picard.pl CollectGcBiasMetrics.jar INPUT=ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam OUTPUT=ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.CollectGcBiasMetrics.metric.txt VALIDATION_STRINGENCY=SILENT CHART_OUTPUT=chart REFERENCE_SEQUENCE=/home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa
#+END_SRC

*** QualityScore Distribution

wrap_picard.pl QualityScoreDistribution.jar INPUT=[.bam] OUTPUT=[QualityScoreDistribution.metric.txt VALIDATION_STRINGENCY=SILENT CHART_OUTPUT=chart

#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/wrap_picard.pl QualityScoreDistribution.jar INPUT=ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam OUTPUT=ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.QualityScoreDistribution.metric.txt VALIDATION_STRINGENCY=SILENT CHART_OUTPUT=chart
#+END_SRC

*** CollectAlignmentSummaryMetrics

wrap_picard.pl CollectAlignmentSummaryMetrics.jar INPUT=[.bam] OUTPUT=[.CollectAlignmentSummaryMetrics.metric.txt] IS_BISULFITE_SEQUENCED=true REFERENCE_SEQUENCE=[reference.fa]

#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/wrap_picard.pl CollectAlignmentSummaryMetrics.jar INPUT=ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.mdups.bam OUTPUT=ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.mdups.bam.CollectAlignmentSummaryMetrics.metric.txt IS_BISULFITE_SEQUENCED=true REFERENCE_SEQUENCE=/home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa
#+END_SRC

*** CollectInsertSizeMetrics

wrap_picard.pl CollectInsertSizeMetrics.jar INPUT=[.bam] OUTPUT=[.CollectInsertSizeMetrics.metric.txt] VALIDATION_STRINGENCY=SILENT HISTOGRAM_FILE=chart

#+BEGIN_SRC
/home/uec-00/shared/production/software/perl_utils_usc/wrap_picard.pl CollectInsertSizeMetrics.jar INPUT=ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam OUTPUT=ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.CollectInsertSizeMetrics.metric.txt VALIDATION_STRINGENCY=SILENT HISTOGRAM_FILE=chart
#+END_SRC

*** MeanQualityByCycle.jar

wrap_picard.pl MeanQualityByCycle.jar INPUT=[.bam] OUTPUT=[.MeanQualityByCycle.metric.txt] VALIDATION_STRINGENCY=SILENT CHART_OUTPUT=chart

#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/wrap_picard.pl MeanQualityByCycle.jar INPUT=ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam OUTPUT=ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.MeanQualityByCycle.metric.txt VALIDATION_STRINGENCY=SILENT CHART_OUTPUT=chart
#+END_SRC

** bissnp_trinuc_sample.pl - MethLevelAverages by Yaping

NOTE: this depends on the bis-snp output:
*.raw.vcf.MethySummarizeList.txt

bissnp_trinuc_sampletrinuc_sample.pl [MethLevelAverages.metric.txt] [.bam] [reference.fa] [optional: chrM]

#+BEGIN_SRC
/home/uec-00/shared/production/software/perl_utils_usc/bissnp_trinuc_sample.pl ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.MethLevelAverages.metric.txt ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam /home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa
#+END_SRC

#+BEGIN_SRC
/home/uec-00/shared/production/software/perl_utils_usc/bissnp_trinuc_sample.pl ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.chrM.MethLevelAverages.metric.txt ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam /home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa chrM
#+END_SRC

** countnmer.pl
countnmer.pl [1.fq] [2.fq]

actually runs $JAVA edu.usc.epigenome.scripts.FastaToNmerCounts -nmer $i
#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/countnmer.pl nmerCount_AGILENT_s_1_3mers.csv KJ_SC112012_KJ80_I001_ATCACG_L005_R1.1.fastq KJ_SC112012_KJ80_I001_ATCACG_L005_R2.1.fastq 
#+END_SRC
** wrap_wigToBigWig.pl - wigToBigWig

wrap_wigToBigWig.pl [.wig] [.bw]

#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/wrap_wigToBigWig.pl ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.winsize30dumpv.BinDepths.metric.wig ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.winsize30dumpv.BinDepths.metric.wig.bw
#+END_SRC

#+BEGIN_SRC
/home/uec-00/shared/production/software/perl_utils_usc/wrap_wigToBigWig.pl ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.winsize5000dumpv.BinDepths.metric.wig ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.winsize5000dumpv.BinDepths.metric.wig.bw
#+END_SRC
** trackversions.pl - track versions

trackversions.pl [.bam] [.ApplicationStackMetrics.metric.txt]

#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/trackversions.pl ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.ApplicationStackMetrics.metric.txt
#+END_SRC

** cleanPipelineParts.pl - clean pipeline parts

cleanPipelineParts.pl [dir]

#+BEGIN_SRC 
/home/uec-00/shared/production/software/perl_utils_usc/cleanPipelineParts.pl /export/uec-gs1/laird/shared/production/ga/merges/2014-02-12_1437_merge_NIC1254A76/results/MERGING/MERGING_1_NIC1254A76
#+END_SRC

** wrap_rnaseq_metrics.pl

wrap_rnaseq_metrics.pl [.bam] [.fa] [.CollectRnaSeqMetrics.metric.txt]

#+BEGIN_SRC
/home/uec-00/shared/production/software/perl_utils_usc/wrap_rnaseq_metrics.pl ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.mdups.bam /home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.mdups.bam.CollectRnaSeqMetrics.metric.txt
#+END_SRC

** bamToElementEnrichment.pl

bamToElementEnrichment.pl [.bam] [.CPGvsRandomCov.metric.txt]

#+BEGIN_SRC
/home/uec-00/shared/production/software/perl_utils_usc/bamToElementEnrichment.pl  ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam /home/rcf-40/bberman/tumor/genomic-data-misc/CGIs/Takai_Jones_from_Fei_122007.fixed.PROMOTERONLY.oriented.hg19.bed ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.CPGvsRandomCov.metric.txt
#+END_SRC

** solexaFilterContams.pl
* uecgatk.pl
** bin depths

uecgatk.pl -T BinDepths -R [reference.fa] -I [.bam] -o [.wig]

#+BEGIN_SRC
/home/uec-00/shared/production/software/uecgatk/default/uecgatk.pl  -T BinDepths -R /home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa -I ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam -o ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.winsize30dumpv.BinDepths.metric.wig -winsize 30 -dumpv
#+END_SRC

#+BEGIN_SRC
/home/uec-00/shared/production/software/uecgatk/default/uecgatk.pl  -T BinDepths -R /home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa -I ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam -o ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.p5000000winsize50000dumpv.BinDepths.metric.wig -p 5000000 -winsize 5000 -dumpv
#+END_SRC

#+BEGIN_SRC
/home/uec-00/shared/production/software/uecgatk/default/uecgatk.pl  -T BinDepths -R /home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa -I ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam -o ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.winsize5000dumpv.BinDepths.metric.wig -winsize 5000 -dumpv
#+END_SRC

** DownsampleDups - downsample duplicates

uecgatk.pl -T DownsampleDups -R [reference.fa] -I [.bam] -o [DownsampleDups.metric.txt]

#+BEGIN_SRC 
/home/uec-00/shared/production/software/uecgatk/default/uecgatk.pl  -T DownsampleDups -R /home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa -I ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam -o ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.p5000000trials100nt8.DownsampleDups.metric.txt -p 5000000 -trials 100 -nt 8
#+END_SRC

** Read length metric

uecgatk.pl -T ReadLength -R [.fa] -I [.bam] -o [ReadLength.metric.txt]

#+BEGIN_SRC 
/home/uec-00/shared/production/software/uecgatk/default/uecgatk.pl  -T ReadLength -R /home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa -I ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam -o ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam..ReadLength.metric.txt
#+END_SRC

** MethLevelAverages

uecgatk.pl -T MethLevelAverages -R [reference.fa] -I [.bam] -o [.cph.MethLevelAverages.metric.txt] -cph

specify chromosomes: -L chrM:1234-12345

#+BEGIN_SRC 
/home/uec-00/shared/production/software/uecgatk/default/uecgatk.pl  -T MethLevelAverages -R /home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa -I ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam -o ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam.cph.MethLevelAverages.metric.txt -cph
#+END_SRC

** FlagStat

uecgatk.pl -T FlagStat -R [reference.fa] -I [.bam] -o [.FlagStat.metric.txt]

#+BEGIN_SRC 
/home/uec-00/shared/production/software/uecgatk2/default/uecgatk.pl  -T FlagStat -R /home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa -I ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.mdups.bam -o ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.mdups.bam.rfNumberHitsEqualsOne.FlagStat.metric.txt -rf NumberHitsEqualsOne
#+END_SRC

** InvertedReadPairDups

uecgatk.pl -T InvertedReadPairDups -R [reference.fa] -I [.bam] -o [.InvertedReadPairDups.metric.txt]

#+BEGIN_SRC 
/home/uec-00/shared/production/software/uecgatk/default/uecgatk.pl  -T InvertedReadPairDups -R /home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa -I ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam -o ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam..InvertedReadPairDups.metric.txt
#+END_SRC

* bissnp pipeline

bissnp_pipeline.pl [.bam] [reference.fa]

#+BEGIN_SRC 
/home/uec-00/shared/production/software/bissnp/bissnp_pipeline.pl ResultCount_MERGING_1_NIC1254A76.hg19_rCRSchrm.fa.bam /home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa
#+END_SRC

** bam_indel_realign

java -jar bissnp.jar -R 

** bam_mdups

** bam_base_recalibration

** bissnp

#!/usr/bin/perl
##This script is used for USC Epigenome center data processing pipeline. Sorted, indexed, have Readgroup tag raw bam file -> BAM with indel realignment ->
## mark duplicated reads -> BAM with base quality recalibration (Level I) -> bissnp genotyping -> vcf sorting -> vcf filtering, no SB, no SNP cluster (level II) -> 6+2 bed file, strand

## author: Yaping Liu  lyping1986@gmail.com
## time: 2012-6-12

#Usege:  bissnp_pipeline.pl bam_file ref_genome_file

use Getopt::Long;
use File::Basename;
use lib dirname (__FILE__);
use EpigenomeUtils;

my $skip_indel_align = "";
my $skip_mdups = "";
my $skip_base_recal = "";
my $skip_genotyping = "";
my $skip_vcf_filter = "";
my $skip_vcf_sort = "";
my $skip_filter_bed_file = "";
my $skip_bed_file = "";
my $skip_wig_file = "";
GetOptions(
        "skip_indel_align" => \$skip_indel_align,
        "skip_mdups" => \$skip_mdups,
        "skip_base_recal" => \$skip_base_recal,
        "skip_genotyping" => \$skip_genotyping,
        "skip_vcf_filter" => \$skip_vcf_filter,
        "skip_vcf_sort" => \$skip_vcf_sort,
        "skip_filter_bed_file" => \$skip_filter_bed_file,
        "skip_bed_file" => \$skip_bed_file,
        "skip_wig_file" => \$skip_wig_file,
);

my $input = shift @ARGV || die "need input bam file";
my $ref = shift @ARGV || die "need reference genome file";

for (@ARGV)
{
        $RRBS = "true" if $_ =~ /RRBS/i;
        $nome_seq_mode = "true" if $_ =~ /NOME/i;
}


#my $numcores = `cat /proc/cpuinfo | grep processor -c`;
my $numcores = 14;
chomp $numcores;
#$numcores = $numcores / 2 - 1;

my $confidance = 20;
my $bisulfiteRate = 0.9975;
my $minMapQ = 30;
my $minBaseQ = 5;

my $ram = 2 * $numcores;
my $ram = int($ram);
my $SAMTOOLS = "$SOFTWAREROOT/samtools/samtools";
my $PICARD = "$SOFTWAREROOT/picard/default/";
my $BISSNP = "$SOFTWAREROOT/bissnp/bissnp-default.jar";
my $JAVA = "$SOFTWAREROOT/java/default/bin/java -Xmx$ram" . "G";
my $IGVTOOLS = "$SOFTWAREROOT/igvtools/default/igvtools toTDF";
my $WIG2BW = "$SOFTWAREROOT/UCSC_Browser_Tools/default/wigToBigWig";
my $CHROMSIZE="$SOFTWAREROOT/UCSC_Browser_Tools/default/hg19.chrom.sizes";

my $VCFTOOLS = "$SOFTWAREROOT/bissnp/sortByRefAndCor.pl";
my $VCF2BED = "$SOFTWAREROOT/bissnp/vcf2bed6plus2.pl";
my $VCF2WIG = "$SOFTWAREROOT/bissnp/vcf2wig.pl";
my $VCF2COV = "$SOFTWAREROOT/bissnp/vcf2wig_ct_coverage.pl";
my $VCF2RAWCOV = "$SOFTWAREROOT/bissnp/vcf2wig_raw_coverage.pl";



my $dbsnp;
my $indel_1;
my $indel_2;
my $interval;


## define required file by provided reference genome
if($ref =~/hg18/){
        $dbsnp="$SOFTWAREROOT/bissnp/genomic_data/dbsnp_135.hg18.sort.vcf";
        $indel_1 = "$SOFTWAREROOT/bissnp/genomic_data/1000G_phase1.indels.hg18.sort.vcf";
        $indel_2 = "$SOFTWAREROOT/bissnp/genomic_data/Mills_and_1000G_gold_standard.indels.hg18.sites.sort.vcf";
        #$ref="/home/uec-00/shared/production/genomes/hg18_unmasked/hg18_unmasked.plusContam.fa";
        $interval = "/home/uec-00/shared/publicationData/bissnp2011/whole_genome_interval_list.hg18.bed";
        $CHROMSIZE="$SOFTWAREROOT/UCSC_Browser_Tools/default/hg18.chrom.sizes";
}elsif($ref =~/hg19/){
        $dbsnp="$SOFTWAREROOT/bissnp/genomic_data/dbsnp_135.hg19.sort.vcf";
        $indel_1 = "$SOFTWAREROOT/bissnp/genomic_data/1000G_phase1.indels.hg19.sort.vcf";
        $indel_2 = "$SOFTWAREROOT/bissnp/genomic_data/Mills_and_1000G_gold_standard.indels.hg19.sites.sort.vcf";
        #$ref="/home/uec-00/shared/production/genomes/hg19_rCRSchrm/hg19_rCRSchrm.fa";
        $interval = "$PUBLICATIONDATA/bissnp2011/whole_genome_interval_list.hg19.bed";

}elsif($ref =~/37/){
        $dbsnp="$SOFTWAREROOT/bissnp/genomic_data/dbsnp_135.b37.vcf";
        $indel_1 = "$SOFTWAREROOT/bissnp/genomic_data/1000G_phase1.indels.b37.sort.vcf";
        $indel_2 = "$SOFTWAREROOT/bissnp/genomic_data/Mills_and_1000G_gold_standard.indels.b37.sites.sort.vcf";
        #$ref="$SOFTWAREROOT/bissnp/genomic_data/GRCh37-lite.fa";
        $interval = "$PUBLICATIONDATA/bissnp2011/whole_genome_interval_list.hg19.bed";
        $CHROMSIZE="/export/uec-gs1/laird/users/yaping/data/genome_data/genome_interval/GRCh37.chrom.sizes";

}elsif($ref =~/mm9/){
        $dbsnp="$SOFTWAREROOT/bissnp/genomic_data/mouse-20111102-snps-all.annotated.mm9.vcf";
        $indel_1 = "$SOFTWAREROOT/bissnp/genomic_data/mouse-20110602-callable-dinox-indels.annot.mm9.vcf";
        #$ref="/home/uec-00/shared/production/genomes/mm9_unmasked/mm9_unmasked.fa";
        $interval = "$PUBLICATIONDATA/bissnp2011/whole_genome_interval_list.mm9.bed";
        $CHROMSIZE="$SOFTWAREROOT/UCSC_Browser_Tools/default/mm9.chrom.sizes";
}elsif($ref =~/mm10/){
        $dbsnp="$SOFTWAREROOT/bissnp/genomic_data/mgp.v3.snps.rsIDdbSNPv137.mm10.vcf";
        $indel_1 = "$SOFTWAREROOT/bissnp/genomic_data/mgp.v3.indels.rsIDdbSNPv137.mm10.vcf";
        #$ref="/home/uec-00/shared/production/genomes/mm10/mm10.fa";
        $interval = "$PUBLICATIONDATA/bissnp2011/whole_genome_interval_list.mm10.bed";
        $CHROMSIZE="$SOFTWAREROOT/UCSC_Browser_Tools/default/mm10.chrom.sizes";
}
else{
        die "not support this reference genome file yet";
}

## intermdediate file name
my $input_bam_realign = $input;
$input_bam_realign =~ s/\.bam//;
$input_bam_realign .= ".realign.bam";

my $input_bam_realign_mdups = $input_bam_realign;
$input_bam_realign_mdups =~ s/\.bam//;
$input_bam_realign_mdups .= ".mdups.bam" unless $RRBS;
$input_bam_realign_mdups .= ".withdups.bam" if $RRBS;


my $input_bam_realign_mdups_recal = $input_bam_realign_mdups;
$input_bam_realign_mdups_recal =~ s/\.bam//;
$input_bam_realign_mdups_recal .= ".recal.bam";

my $indel_target_interval = $input;
$indel_target_interval =~ s/\.bam//;
$indel_target_interval .= ".indels.intervals";
my $recalFile_before=$input_bam_realign_mdups_recal;
$recalFile_before =~ s/\.bam//;
$recalFile_before .= ".beforeRecal.txt";
my $recalFile_after=$input_bam_realign_mdups_recal;
$recalFile_after =~ s/\.bam//;
$recalFile_after .= ".afterRecal.txt";
my $tmp_dir="./";
my $metrics_file=$input_bam_realign_mdups.".dupsMetrics.txt";

my $vcf_unsorted_cpg = $input_bam_realign_mdups_recal;
my $vcf_unsorted_snp = $input_bam_realign_mdups_recal;
$vcf_unsorted_cpg =~ s/\.bam//;
if($nome_seq_mode ne ""){
        $vcf_unsorted_cpg .= ".cytosine.raw.vcf";
}
else{
        $vcf_unsorted_cpg .= ".cpg.raw.vcf";
}

$vcf_unsorted_snp =~ s/\.bam//;
$vcf_unsorted_snp .= ".snp.raw.vcf";

my $vcf_sorted_cpg = $vcf_unsorted_cpg;
my $vcf_sorted_snp = $vcf_unsorted_snp;
$vcf_sorted_cpg =~ s/\.vcf//;
$vcf_sorted_cpg .= ".sort.vcf";
$vcf_sorted_snp =~ s/\.vcf//;
$vcf_sorted_snp .= ".sort.vcf";

my $vcf_sorted_cpg_filtered = $vcf_sorted_cpg;
my $vcf_sorted_snp_filtered = $vcf_sorted_snp;
$vcf_sorted_cpg_filtered =~ s/\.raw\.sort\.vcf//;
$vcf_sorted_cpg_filtered .= ".filtered.sort.vcf";
$vcf_sorted_snp_filtered =~ s/\.raw\.sort\.vcf//;
$vcf_sorted_snp_filtered .= ".filtered.sort.vcf";

my $wig_cpg = $vcf_sorted_cpg_filtered;
my $wig_cpg_cov = $vcf_sorted_cpg_filtered;
my $wig_hcg = $vcf_sorted_cpg_filtered;
my $wig_hcg_cov = $vcf_sorted_cpg_filtered;
my $wig_hcg_tdf;
my $wig_hcg_tdf_cov;



$wig_cpg =~ s/\.vcf//;

if($nome_seq_mode ne ""){
        $wig_cpg .= ".GCH.wig";
        $wig_cpg_cov =~ s/.vcf//;
        $wig_cpg_cov .= ".GCH.ct_coverage.wig";

        $wig_hcg =~ s/.vcf//;
        $wig_hcg .= ".HCG.wig";
        $wig_hcg_cov =~ s/.vcf//;
        $wig_hcg_cov .= ".HCG.ct_coverage.wig";

        $wig_hcg_tdf = $wig_hcg;
        $wig_hcg_tdf =~ s/.wig//;
        $wig_hcg_tdf_cov = $wig_hcg_cov;
        $wig_hcg_tdf_cov =~ s/.wig//;
        $wig_hcg_tdf .= ".bw";
        $wig_hcg_tdf_cov .= ".bw";

}
else{
        $wig_cpg .= ".CG.wig";
        $wig_cpg_cov =~ s/.vcf//;
        $wig_cpg_cov .= ".CG.ct_coverage.wig";
}

my $wig_cpg_raw_cov = $vcf_sorted_cpg;
$wig_cpg_raw_cov =~ s/\.vcf$/.CG.raw_coverage.wig/;
my $wig_tdf_raw_cov = $wig_cpg_raw_cov;
$wig_tdf_raw_cov =~ s/\.wig$/.bw/;

my $wig_tdf = $wig_cpg;
$wig_tdf =~ s/\.wig//;
my $wig_tdf_cov = $wig_cpg_cov;
$wig_tdf_cov =~ s/\.wig//;
my $genome_version;
if($ref =~/hg18/){
        $genome_version = "hg18";
}
elsif($ref =~/hg19/){
        $genome_version = "hg19";
}
elsif($ref =~/37/){
        $genome_version = "b37";
}
elsif($ref =~/mm9/){
        $genome_version = "mm9";
}
elsif($ref =~/mm10/){
        $genome_version = "mm10";
}
$wig_tdf .= ".bw";
$wig_tdf_cov .= ".bw";

unless($skip_indel_align ne "" || -e $input_bam_realign || -e $input_bam_realign_mdups || -e $input_bam_realign_mdups_recal){
        &bam_indel_realign();
}
unless($skip_mdups ne "" || -e $input_bam_realign_mdups || -e $input_bam_realign_mdups_recal){
        &bam_mdups();
}
unless($skip_base_recal ne "" || -e $input_bam_realign_mdups_recal){
        &bam_base_recalibration();
}
my $cmd="rm $input_bam_realign";
system($cmd);
$input_bam_realign=~s/\.bam/.bai/;
$cmd="rm $input_bam_realign";
system($cmd);
$cmd="rm $input_bam_realign_mdups";
system($cmd);
$input_bam_realign_mdups=~s/\.bam/.bai/;
$cmd="rm $input_bam_realign_mdups";
system($cmd);
if($skip_genotyping eq ""){
        &bissnp();
}
if($skip_vcf_sort eq ""){
        &vcf_sort();
}
$cmd="rm $vcf_unsorted_cpg";
system($cmd);
$cmd="rm $vcf_unsorted_snp";
system($cmd);
if($skip_vcf_filter eq ""){
        &vcf_filter();
}
if($skip_bed_file eq "" && $nome_seq_mode eq ""){
        &vcf2bed6plus2();
}
if($skip_filter_bed_file eq ""){
        &vcf2bed6plus2_filter();
}

if($skip_wig_file eq ""){
        &vcf2tdf();
}

sub bam_indel_realign{

        my $header .= "$JAVA -jar $BISSNP -R $ref ";
        $header .= "-I $input ";
        #$header .= "-T BisulfiteRealignerTargetCreator -L $interval ";
        $header .= "-T BisulfiteRealignerTargetCreator ";
        $header .= "-known $indel_1 ";
        if($ref !~/mm\d+/){
                $header .= "-known $indel_2 ";
        }
        $header .= "-o $indel_target_interval -nt $numcores\n ";

        #realign
        $header .= "$JAVA -jar $BISSNP -R $ref ";
        $header .= "-I $input ";
        $header .= "-T BisulfiteIndelRealigner -targetIntervals $indel_target_interval ";
        $header .= "-known $indel_1 ";
        if($ref !~/mm\d+/){
        $header .= "-known $indel_2 ";
        }
        $header .= "-compress 5 -cigar ";
        $header .= "-o $input_bam_realign\n ";

        system($header)== 0 || die "system call to bam_indel_realign() failed: $?\n" ;
        print "$header\n";
}

#mark dups if not RRBS / unmark if rrbs
sub bam_mdups{
        my $header .= "$JAVA -jar $PICARD/MarkDuplicates.jar I=$input_bam_realign O=$input_bam_realign_mdups ";
        $header .= "CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT MAX_RECORDS_IN_RAM=3000000 ";
        $header .= "METRICS_FILE=$metrics_file ";
        $header .= "TMP_DIR=$tmp_dir \n";
        #handle RRBS
        $header = "$JAVA -jar $PICARD/RevertSam.jar INPUT=$input_bam_realign OUTPUT=$input_bam_realign_mdups VALIDATION_STRINGENCY=SILENT MAX_RECORDS_IN_RAM=3000000 SORT_ORDER=coordina
        system($header)== 0 || die "system call to bam_mdups() failed: $?\n" ;;
        print "$header\n";
}

sub bam_base_recalibration{
        ##1 countCovariant
        my $header .= "$JAVA -jar $BISSNP -R $ref ";
        $header .= "-I $input_bam_realign_mdups ";
        $header .= "-T BisulfiteCountCovariates -nt $numcores ";
        $header .= "-knownSites $dbsnp ";
        $header .= "-cov ReadGroupCovariate -cov QualityScoreCovariate -cov CycleCovariate ";
        $header .= "-recalFile $recalFile_before \n ";

##2 TableRecalibration
        $header .= "$JAVA -jar $BISSNP -R $ref ";
        $header .= "-I $input_bam_realign_mdups ";
        $header .= "-T BisulfiteTableRecalibration ";
        $header .= "-o $input_bam_realign_mdups_recal ";
        $header .= "-recalFile $recalFile_before -maxQ 40 \n ";

##3 countCovariantAfterRecalibrate
        $header .= "$JAVA -jar $BISSNP -R $ref ";
        $header .= "-I $input_bam_realign_mdups_recal ";
        $header .= "-T BisulfiteCountCovariates -nt $numcores ";
        $header .= "-knownSites $dbsnp ";
        $header .= "-cov ReadGroupCovariate -cov QualityScoreCovariate -cov CycleCovariate ";
        $header .= "-recalFile $recalFile_after \n ";

        system($header)== 0 || die "system call to bam_base_recalibration() failed: $?\n" ;;
        print "$header\n";
}

sub bissnp{
        my $header .= "$JAVA -jar $BISSNP -R $ref ";
        $header .= "-I $input_bam_realign_mdups_recal ";
        $header .= "-D $dbsnp -T BisulfiteGenotyper -vfn1 $vcf_unsorted_cpg -vfn2 $vcf_unsorted_snp ";
        #$header .= "-stand_call_conf $confidance -stand_emit_conf 0 -dt NONE -L $interval -bsRate $bisulfiteRate -loc -1 -nt $numcores ";
        if($nome_seq_mode ne ""){
                $header .= "-out_modes EMIT_VARIANT_AND_CYTOSINES -sm GM ";
        }
        $header .= "-toCoverage 99999 -minConv 0 " if $RRBS;
        $header .= "-minConv 1 " unless $RRBS;
        print STDERR "using bissnp RBBS options\n " if $RRBS;
        $header .= "-stand_call_conf $confidance -stand_emit_conf 0 -dt NONE -bsRate $bisulfiteRate -loc -1 -nt $numcores ";
        $header .= "-vcfCache 1000000 ";
        $header .= "-mmq $minMapQ ";
        $header .= "-mbq $minBaseQ\n";

        system($header)== 0 || die "system call to bissnp() failed: $?\n" ;;
        print "$header\n";
}

sub vcf_sort{
        my $header .= "perl $VCFTOOLS --k 1 --c 2 ";
        $header .= "--tmp ".dirname($vcf_unsorted_cpg);
        $header .= " $vcf_unsorted_cpg ";
        $header .= "$ref";
        $header .= ".fai ";
        $header .= "> $vcf_sorted_cpg \n";
        $header .= "perl $VCFTOOLS --k 1 --c 2 ";
        $header .= "--tmp ".dirname($vcf_unsorted_snp)." ";
        $header .= "$vcf_unsorted_snp ";
        $header .= "$ref";
        $header .= ".fai ";
        $header .= "> $vcf_sorted_snp \n";

        system($header)== 0 || die "system call to vcf_sort() failed: $?\n" ;;
        print "$header\n";
}

sub vcf_filter{
        my $header .= "$JAVA -jar $BISSNP -R $ref -T VCFpostprocess ";
        #$header .= "-qual $confidance -L $interval ";
        if($nome_seq_mode ne ""){
                $header .= "-C GCH -C HCH -C GCG -C HCG ";
        }
        $header .= "-qual $confidance ";
        $header .= "-oldVcf $vcf_sorted_cpg ";
        $header .= "-snpVcf $vcf_sorted_snp ";
        $header .= "-newVcf $vcf_sorted_cpg_filtered ";
        $header .= "-o $vcf_sorted_cpg_filtered.cpgSummary.txt \n";

        $header .= "$JAVA -jar $BISSNP -R $ref -T VCFpostprocess ";
        #$header .= "-qual $confidance -L $interval ";
        if($nome_seq_mode ne ""){
                $header .= "-C GCH -C HCH -C GCG -C HCG ";
        }
        $header .= "-qual $confidance ";
        $header .= "-oldVcf $vcf_sorted_snp ";
        $header .= "-snpVcf $vcf_sorted_snp ";
        $header .= "-newVcf $vcf_sorted_snp_filtered ";
        $header .= "-o $vcf_sorted_snp_filtered.cpgSummary.txt \n";

        system($header)== 0 || die "system call to vcf_filter() failed: $?\n" ;;
        print "$header\n";

}

##output all CGs, but in seperated strand
sub vcf2bed6plus2{
        my $header .= "perl $VCF2BED --seperate_strand $vcf_sorted_cpg ";
        if($nome_seq_mode ne ""){
                $header .= "GCH \n";
                system($header)== 0 || die "system call to vcf2bed6plus2() failed: $?\n" ;;
                print "$header\n";
                $header = "perl $VCF2BED --seperate_strand $vcf_sorted_cpg HCG \n";
        }
        else{
                $header .= "CG \n";
        }

        system($header)== 0 || die "system call to vcf2bed6plus2() failed: $?\n" ;;
        print "$header\n";
}

##output only good CGs{, for NOMe-seq, it will not combine both of the strand..
sub vcf2bed6plus2_filter{
        my $header .= "perl $VCF2BED --only_good_call $vcf_sorted_cpg_filtered ";
        if($nome_seq_mode ne ""){
                $header .= "GCH --seperate_strand \n";
                system($header)== 0 || die "system call to vcf2bed6plus2_filter() failed: $?\n" ;;
                print "$header\n";
                $header = "perl $VCF2BED --seperate_strand --only_good_call $vcf_sorted_cpg_filtered HCG \n";
        }
        else{
                $header .= "CG \n";
        }

        system($header)== 0 || die "system call to vcf2bed6plus2_filter() failed: $?\n" ;;
        print "$header\n";
}

sub vcf2tdf{
        my $header = "perl $VCF2WIG $vcf_sorted_cpg_filtered ";
        if($nome_seq_mode ne ""){
                $header .= "GCH \n";
                runcmd($header,"vcf2tdf()");
                $header = "perl $VCF2WIG $vcf_sorted_cpg_filtered HCG \n";
        }
        else{
                $header .= "CG \n";
        }
        runcmd($header,"vcf2tdf()");

        $header = "perl $VCF2COV $vcf_sorted_cpg_filtered ";
        if($nome_seq_mode ne ""){
                $header .= "GCH \n";
                runcmd($header,"vcf2tdf()");
                $header = "perl $VCF2COV $vcf_sorted_cpg_filtered HCG \n";
        }
        else{
                $header .= "CG \n";
        }
        runcmd($header,"vcf2tdf()");

        if($nome_seq_mode eq ""){
                $header = "perl $VCF2RAWCOV $vcf_sorted_cpg CG \n";
                runcmd($header,"vcf2tdf()");
        }
        #$header = "$IGVTOOLS $wig_cpg $wig_tdf $genome_version \n";
        $header = "$WIG2BW $wig_cpg $CHROMSIZE $wig_tdf\n";
        runcmd($header,"vcf2tdf()");
        #$header = "$IGVTOOLS $wig_cpg_cov $wig_tdf_cov $genome_version \n";
        $header = "$WIG2BW $wig_cpg_cov $CHROMSIZE $wig_tdf_cov \n";

        runcmd($header,"vcf2tdf()");
        #$header = "rm $wig_cpg\n";
        #$header .= "rm $wig_cpg_cov\n";
        #runcmd($header,"vcf2tdf()");

        if($nome_seq_mode eq ""){
                #$header = "$IGVTOOLS $wig_cpg_raw_cov $wig_tdf_raw_cov $genome_version \n";
                $header = "$WIG2BW $wig_cpg_raw_cov $CHROMSIZE $wig_tdf_raw_cov \n";
                runcmd($header,"vcf2tdf()");
                #$header = "rm $wig_cpg_raw_cov\n";
                #runcmd($header,"vcf2tdf()");
        }

        runcmd($header,"vcf2tdf()");
        if($nome_seq_mode ne ""){
                #$header = "$IGVTOOLS $wig_hcg $wig_hcg_tdf $genome_version \n";
                $header = "$WIG2BW $wig_hcg $CHROMSIZE $wig_hcg_tdf \n";
                runcmd($header,"vcf2tdf()");
                #$header = "$IGVTOOLS $wig_hcg_cov $wig_hcg_tdf_cov $genome_version \n";
                $header = "$WIG2BW $wig_hcg_cov $CHROMSIZE $wig_hcg_tdf_cov \n";

                runcmd($header,"vcf2tdf()");

                #$header = "rm $wig_hcg\n";
                #$header = "rm $wig_hcg_cov\n";
                #runcmd($header,"vcf2tdf()");

        }

}

** vcf_sort

** vcf_filter

** vcf2bed6plus2

** vcf2bed6plus2_filter

** vcf2tdf

* GATK
** CountReads - count reads from bam file
java -jar $GATK -R [reference.fasta] -I [.bam]
** CountLoci - count how many bases have been covered by at least one or more reads
java -jar $GATK -T CountLoci -R GATK-3.3.0/resources/exampleFASTA.fasta -I GATK-3.3.0/resources/exampleBAM.bam -o output.txt
* Picard
** AddOrReplaceReadGroups

#+BEGIN_SRC 
$JAVABIN -Xmx4g -jar ~/tools/picard/picard-tools-1.128/picard.jar AddOrReplaceReadGroups INPUT=output/NIC1254A45.bam OUTPUT=output/NIC1254A45_RG.bam RGLB=MERGING RGPL=illumina RGPU=1 RGSM=NIC1254A45
#+END_SRC

or old picard
#+BEGIN_SRC 
$JAVA -Xmx4g -jar $PICARD/AddOrReplaceReadGroups.jar CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT SORT_ORDER=coordinate
MAX_RECORDS_IN_RAM=1000000 INPUT='$bamIn' OUTPUT='with_rg_$bamOut' RGID='$flowcell\.$lane' RGLB='$lib' RGPL='illumina Hiseq'
RGPU='$flowcell\.$lane' RGSM='$lib' RGCN='USC EPIGENOME CENTER' RGDS='from file $bamIn on $date'"
#+END_SRC

** MergeSamFiles

$JAVA -Xmx4g -jar picard.jar MergeSamFiles INPUT=[in1.bam] INPUT=[in2.bam] ... OUTPUT=[out.bam]

or old picard
#+BEGIN_SRC
$JAVA -Xmx4g -jar $PICARD/MergeSamFiles.jar $cmd
#+END_SRC

** MarkDuplicate

#+BEGIN_SRC 
$JAVA -Xms7g -Xmx7g -jar $PICARD/MarkDuplicates.jar CREATE_INDEX=true VALIDATION_STRINGENCY=SILENT METRICS_FILE=dupmets.txt
READ_NAME_REGEX=null INPUT=$output OUTPUT=$outputdups
#+END_SRC

* COX regression

qualitative covariate
https://www.youtube.com/watch?v=xwhEcXaWkh0
https://www.youtube.com/watch?v=UL1tjzhBwrw

hmohiv.dat
time status
5  1
6  0
7  1

status == 1 means dead at recorded time, status == 0 means alive last seen at recorded time
see Surv for help
The status indicator, normally 0=alive, 1=dead. Other choices are TRUE/FALSE (TRUE = death) or 1/2 (2=death).

#+BEGIN_SRC R
library(survival)
cphb.drug = coxph(Surv(time, status)~drug, data=dat, method="beslow")
cphbef.drug = coxph(Surv(time, status)~drug, data=dat, method="efron")
cphbex.drug = coxph(Surv(time, status)~drug, data=dat, method="exact") # the best

#+END_SRC

      coef   exp(coef) ...
drug  0.8571  2.3564

Interpretation
the risk of drug 1 is 2.35 times higher than risk of drug 0

gage = cut(dat$age, br=c(19,29,34,39,60), labels=c("[20-29]", "[30...))

#+BEGIN_SRC R
cphb.gage = coxph(Surv(time, status)~gage, data=dat, method="exact")
#+END_SRC

              coef  exp(coef)
gage[30-34]  3.310  0.3021
gage[35-39]  3.718  0.2689
gage[40-54]  1.86   6.43

age group 40-54 is 6.43 times higher risk than age group 20-30

exp(coef) is called *hazard ratio*

# change reference category
gage30 = factor(gage, c("[30-34]", "[20-29]", "[35-39]", "[40-54]")

The first is the reference category ("[30-34]")

if you have k categories, you need k-1 dummy variables

# continuous covariate
cph.age = coxph(Surv(time, status)~age, data=dat, method="breslow")
      coef  exp(coef)  se(coef)  z    p
age   0.0814 1.08      0.0174 4.67  3e-6

1.08 is the slope of additional year in age the increase in risk. (8% increase in risk each year)
se(coef) stands for "standard error"

summary(cph.age) gives the confidence intervals.

confidence interval is for the *hazard ratio*
     exp(-coef) 
age  0.9218

exp(-coef) means with additional year decrease there is 92.18% risk remaining.

* QQPlot interpretation
used for investigating normality assumption

plot i-th ordered value against the i/(n+1) th quantile of the standard normal distribution
or using (i-1/2)/n or (i-a)/(n+1-2a) with "a" between 0 and 1/2
https://www.youtube.com/watch?v=X9_ISJ0YpGw

qqnorm and qqline
#+BEGIN_SRC R
simn = rnorm(10000,0,2)
simchi = rchisq(10000,6)
simchi2 = -simchi
simt = rt(10000,20)
par(mfrow=c(2,2))
hist(simn, main="Symmetric distribution", xlab="")
qqnorm(simn)
qqline(simn)
... # 3 more plots
#+END_SRC

* MAplot
https://www.youtube.com/watch?v=46-t2jOYsyY
Bland-Altman plot
Just a rotated xy-log scaled scatter plot

* smooth-scatter

* volcano plot
inside
https://www.youtube.com/watch?v=46-t2jOYsyY
x negative log p-value
y M value

* PCA
https://www.youtube.com/watch?v=F-nfsSq42ow

